[{"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\index.tsx":"1","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\App.tsx":"3","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\stats\\containers\\Stats.tsx":"4","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\players\\containers\\Players.tsx":"5","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\home\\Home.tsx":"6","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\Navigation\\Navigation.tsx":"7","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\sideDrawer\\SideDrawer.tsx":"8","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\Backdrop\\backdrop.tsx":"9","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\Backdrop\\Backdrop.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1276,"mtime":1611365290758,"results":"14","hashOfConfig":"12"},{"size":126,"mtime":1611276030435,"results":"15","hashOfConfig":"12"},{"size":2980,"mtime":1611427009892,"results":"16","hashOfConfig":"12"},{"size":480,"mtime":1611358630459,"results":"17","hashOfConfig":"12"},{"size":1555,"mtime":1611371424308,"results":"18","hashOfConfig":"12"},{"size":281,"mtime":1611284498709,"results":"19","hashOfConfig":"12"},{"size":252,"mtime":1611282914113,"results":"20","hashOfConfig":"12"},{"size":253,"mtime":1611283900372,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"xna5yl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\index.tsx",[],["46","47"],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\reportWebVitals.ts",[],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\App.tsx",["48"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Players from \"./players/containers/Players\";\nimport Stats from \"./stats/containers/Stats\";\nimport Navigation from \"./shared/Navigation/Navigation\";\nimport Home from \"./home/Home\";\nimport axios from \"axios\";\n\nfunction App() {\n    const [serverData, setServerData] = useState< undefined | unknown>( undefined)\n\n    useEffect( () => {\n        axios.get(\"https://dominion-json-bin-default-rtdb.firebaseio.com/scores.json\")\n            .then( response => {\n                setServerData(response.data)\n                console.log(response)\n            })\n            .catch(error => console.log(error))\n    }, [])\n\n\n    return (\n      <BrowserRouter>\n          <Navigation></Navigation>\n        <Switch>\n            <Route exact path={\"/\"}>\n                <Home />\n            </Route>\n          <Route path={\"/players\"}>\n              <Players data={serverData as object} />\n          </Route>\n          <Route path={\"/stats\"}>\n              <Stats/>\n          </Route>\n            <Route path={\"/\"}>\n                <div>Error 404 :)</div>\n            </Route>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\stats\\containers\\Stats.tsx",[],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\players\\containers\\Players.tsx",["49","50","51","52"],"import React, {useEffect, useState} from 'react'\r\nimport {DominionPlayer, DominionPlayerFullName} from \"../../types/DominionGame\";\r\n\r\ninterface Props {\r\n    data: object\r\n}\r\n\r\nconst Players: React.FC<Props> = (props) => {\r\n    let players: DominionPlayer[] = []\r\n    let playerNames: DominionPlayerFullName[] = []\r\n    console.log(props.data);\r\n    if(props.data){\r\n        //set local players array\r\n        for(const [gameNumber, game] of Object.entries(props.data)){\r\n            for(const player of game){\r\n                players = players.concat(player)\r\n            }\r\n        }\r\n        //find all unique names\r\n        let playerNameSet = new Set(players.map(player => player.fullName))\r\n        //TODO: learn to love typescript enough to deal with the below\r\n        // @ts-ignore\r\n        playerNames = [...playerNameSet]\r\n    }\r\n\r\n\r\n    const calculatePlayerPoints = (playerName: DominionPlayerFullName): number => {\r\n        let playerPoints = 0;\r\n\r\n        for(const player of players){\r\n            if(player.fullName === playerName) {\r\n                if(player.score){\r\n                    playerPoints += player.score\r\n                }\r\n            }\r\n        }\r\n        console.log(playerPoints);\r\n        return playerPoints\r\n    }\r\n\r\n    const calculatePlayerGames = (playerName: DominionPlayerFullName): number => {\r\n        let playerGames = 0;\r\n\r\n        for(const player of players){\r\n            if(player.fullName === playerName) {\r\n                if(player.score){\r\n                    playerGames += 1\r\n                }\r\n            }\r\n        }\r\n        console.log(playerGames);\r\n        return playerGames\r\n    }\r\n\r\n    const calculatePlayerWins = (playerName: DominionPlayerFullName): number => {\r\n        let playerWins = 0;\r\n\r\n        if(props.data){\r\n            for(const [gameNumber, game] of Object.entries(props.data)){\r\n                let winningScore = 0\r\n                //look up the winning score\r\n                for(const player of game){\r\n                    if(player.score > winningScore) winningScore = player.score\r\n                }\r\n                //see if our player got the winning score\r\n                for(const player of game){\r\n                    if(player.fullName === playerName && player.score === winningScore) playerWins ++\r\n                }\r\n            }\r\n        }\r\n        console.log(playerWins);\r\n        return playerWins\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Player Profiles</h1>\r\n            {playerNames.map( player => {\r\n                console.log(player);\r\n                return (\r\n                    <div>\r\n                        <h3>{player}</h3>\r\n                        <p>Wins: {calculatePlayerWins(player)}</p>\r\n                        <p>Points: {calculatePlayerPoints(player)}</p>\r\n                        <p>Games: {calculatePlayerGames(player)}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Players","C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\home\\Home.tsx",[],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\Navigation\\Navigation.tsx",[],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\sideDrawer\\SideDrawer.tsx",[],["53","54"],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\Backdrop\\backdrop.tsx",[],"C:\\Users\\Jakob\\WebstormProjects\\dominion-front-end\\src\\shared\\UI\\Backdrop\\Backdrop.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":40,"nodeType":"61","messageId":"62","endLine":3,"endColumn":44},{"ruleId":"59","severity":1,"message":"63","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"64","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"65","line":14,"column":20,"nodeType":"61","messageId":"62","endLine":14,"endColumn":30},{"ruleId":"59","severity":1,"message":"65","line":59,"column":24,"nodeType":"61","messageId":"62","endLine":59,"endColumn":34},{"ruleId":"55","replacedBy":"66"},{"ruleId":"57","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'gameNumber' is assigned a value but never used.",["68"],["69"],"no-global-assign","no-unsafe-negation"]